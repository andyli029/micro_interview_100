1.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 ¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
   10
  / /
  6  14
 / / / /
4  8 12 16
 ¿¿¿¿¿¿¿
4=6=8=10=12=14=16¿
 
 ¿¿¿¿¿¿¿¿¿¿¿¿ ¿¿¿¿¿¿¿¿¿¿
 struct BSTreeNode
{
  int m_nValue; // value of node
  BSTreeNode *m_pLeft; // left child of node
  BSTreeNode *m_pRight; // right child of node
};
 
2.¿¿¿¿min¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿min¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿min¿push¿¿pop¿¿¿¿¿¿¿¿O(1)¿
 
3.¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿O(n)¿
¿¿¿¿¿¿¿¿1, -2, 3, 10, -4, 7, 2, -5¿¿¿¿¿¿¿¿¿3, 10, -4, 7, 2¿
¿¿¿¿¿¿¿¿¿¿¿18¿
 
4.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿ ¿¿¿¿22¿¿¿¿¿¿
    10  
  /   /   
 5    12   
/ \     
4  7
¿¿¿¿¿¿¿¿¿10, 12¿10, 5, 7¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿
struct BinaryTreeNode // a node in the binary tree
{
int m_nValue; // value of node
BinaryTreeNode *m_pLeft; // left child of node
BinaryTreeNode *m_pRight; // right child of node
};
 
5.¿¿¿¿¿k¿¿¿¿¿¿¿
¿¿¿¿¿n¿¿¿¿¿¿¿¿¿¿¿k¿¿
¿¿¿¿1¿2¿3¿4¿5¿6¿7¿8¿8¿¿¿¿¿¿¿¿4¿¿¿¿1¿2¿3¿4¿
 
¿6¿¿¿¿¿
¿¿¿¿¿¿ 
¿¿10¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿ 
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿ 
¿¿¿¿¿¿¿¿¿ 
¿0¿1¿2¿3¿4¿5¿6¿7¿8¿9¿
¿¿¿¿¿¿ 
¿¿: 0,1,2,3,4,5,6,7,8,9 
¿¿: 6,2,1,0,0,0,1,0,0,0 
0¿¿¿¿¿¿6¿¿1¿¿¿¿¿¿2¿¿ 
2¿¿¿¿¿¿1¿¿3¿¿¿¿¿¿0¿.... 
¿¿¿¿..

¿7¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿h1¿h2¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿
1.¿¿¿¿¿¿¿¿¿?
2.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿?
 
¿8¿¿¿¿¿
¿¿¿¿¿ ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
1.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿ ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿
2.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿?
3.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿?
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿O(n)¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿1001¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿1¿1000(¿¿1000)¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿?
¿¿¿¿¿¿¿¿¿¿¿¿8¿¿¿¿¿¿¿¿¿¿¿¿7¿¿
 

¿9¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿true¿¿¿¿¿false¿
¿¿¿¿5¿7¿6¿9¿11¿10¿8¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
         8
      /  /
     6    10
    / /  / /
   5  7 9  11
¿¿¿¿true¿
¿¿¿¿7¿4¿6¿5¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿false¿
 
¿10¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿I am a student.¿¿¿¿¿¿student. a am I¿¿
 
¿11¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿...
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿"¿¿"¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
¿12¿¿¿¿¿
¿¿¿¿1+2+¿+n¿
¿¿¿¿¿¿¿¿¿¿for¿while¿if¿else¿switch¿case¿¿¿¿¿¿¿¿¿¿¿¿¿A?B:C¿¿
 
¿13¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿k¿¿¿¿¿¿¿¿¿¿0¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿  
struct ListNode
{
  int m_nKey;
  ListNode* m_pNext;
};
 
¿14¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿O(n)¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿1¿2¿4¿7¿11¿15¿¿¿15¿¿¿4+11=15¿¿¿¿¿4¿11¿
 
¿15¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿  
¿¿¿¿¿
  8
  / /
  6 10
 // //
5 7 9 11
¿¿¿
   8
  / /
 10 6
 // //
11 9 7 5
¿¿¿¿¿¿¿¿¿¿¿¿
struct BSTreeNode // a node in the binary search tree (BST)
{
  int m_nValue; // value of node
  BSTreeNode *m_pLeft; // left child of node
  BSTreeNode *m_pRight; // right child of node
};
 
¿16¿¿¿¿¿
¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿  
¿¿¿¿
   8
  / /
 6 10
/ / / /
5 7 9 11
¿¿8 6 10 5 7 9 11¿
 
¿17¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿abaccdeff¿¿¿¿b¿  
¿¿¿¿¿¿¿2006¿google¿¿¿¿¿¿¿
 

¿18¿¿¿¿¿¿
¿¿¿n¿¿¿¿0,1,¿,n-1¿¿¿¿¿¿¿¿¿¿¿0¿¿¿
¿¿¿¿¿¿¿¿¿¿¿m¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿m¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
July¿¿¿¿¿¿¿¿¿¿¿¿¿¿ ¿¿¿¿¿
 

¿19¿¿¿¿¿¿¿¿¿
¿¿¿¿¿Fibonacci¿¿¿¿¿  
  / 0 n=0
f(n)= 1 n=1
  / f(n-1)+f(n-2) n=2
¿¿n¿¿¿¿¿¿¿¿¿¿¿¿¿n¿¿
¿¿¿¿¿¿C¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿Fibonacci¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿....¿¿¿¿¿¿¿¿¿
 
¿20¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿"345"¿¿¿¿¿¿345¿
 
¿21¿¿¿¿¿
2010¿¿¿¿¿¿
¿¿¿¿¿
¿¿¿¿¿¿ n ¿ m¿¿¿¿1¿2¿3.......n ¿ ¿¿¿¿¿¿,
¿¿¿¿¿ m ,¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿.
 
¿22¿¿¿¿¿¿
¿4¿¿¿¿¿¿4¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿A¿B¿C¿¿¿¿¿¿¿¿¿¿¿¿
A¿B¿C¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
A¿¿¿¿¿B¿¿¿¿¿C¿¿¿¿¿¿¿A¿¿¿¿¿
¿¿¿¿¿¿¿A¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿
 
¿23¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿"  
3D¿¿¿ ¿¿(0.0,0.0,0.0)
¿¿:
¿¿r = 3.0
¿¿o = (*.*, 0.0, *.*)
¿¿¿:
4¿¿¿¿;  
1:(*.*, 0.0, *.*)
2:(*.*, 0.0, *.*)
3:(*.*, 0.0, *.*)
4:(*.*, 0.0, *.*)
 
¿24¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿
 
¿25¿¿¿¿¿¿¿
¿¿¿¿¿,¿¿¿¿¿int continumax(char *outputstr,char *intputstr)
¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿outputstr¿¿¿¿¿
¿¿¿"abcd12345ed125ss123456789"¿¿¿¿¿¿intputstr¿¿¿¿¿¿¿9¿
outputstr¿¿¿¿¿123456789
 
26.¿¿¿¿¿¿¿¿¿¿¿
¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿abcdef¿¿¿2¿¿¿¿¿¿cdefab¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿n¿¿¿¿¿¿¿¿¿¿¿O(n)¿¿¿¿¿¿O(1)¿
 
27.¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿n¿¿¿¿¿¿¿¿¿1¿¿¿¿¿¿2¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿MicroStrategy¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
28.¿¿¿¿¿¿¿¿¿1¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿1¿
¿¿¿¿10¿¿¿¿¿¿¿¿¿¿1010¿¿¿¿1¿¿¿¿¿2¿
¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
29.¿¿push¿pop¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿push¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿pop¿¿¿
¿¿¿¿¿¿¿¿¿¿¿push¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿ 
¿¿¿¿¿push¿¿¿1¿2¿3¿4¿5¿¿¿4¿5¿3¿2¿1¿¿¿¿¿¿¿pop¿¿¿
¿¿¿¿¿¿¿¿push¿pop¿¿¿
push 1¿push 2¿push 3¿push 4¿pop¿push 5¿pop¿pop¿pop¿pop¿
¿¿¿¿¿pop¿¿¿¿4¿5¿3¿2¿1¿
¿¿¿4¿3¿5¿1¿2¿¿¿¿¿push¿¿1¿2¿3¿4¿5¿pop¿¿¿
 
30.¿¿1¿n¿¿¿¿1¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿n¿¿¿1¿n¿n¿¿¿¿¿¿¿¿¿¿1¿¿¿¿¿¿
¿¿¿¿12¿¿1¿12¿¿¿¿¿¿¿1 ¿¿¿¿1¿10¿11¿12¿1¿¿¿¿¿5¿¿
¿¿¿¿¿¿¿¿¿¿¿¿google¿¿¿¿
 
31.¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿5¿¿¿
 
32.¿¿¿¿¿¿¿
¿¿¿¿¿a,b¿¿¿¿¿n,¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿a,b¿¿¿¿¿¿[¿¿a¿¿¿¿]¿[¿¿b¿¿¿¿]¿¿¿¿¿¿¿
¿¿:  
var a=[100,99,98,1,2, 3];
var b=[1, 2, 3, 4,5,40];
 
33.¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿123
1******3***2 ,12*****3¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
34.¿¿¿¿
¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿int¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿int¿¿¿¿¿¿
 
35.¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿(¿¿¿¿¿).¿:
1 2 0 3 4
2 3 4 5 1
1 1 5 3 0
¿¿¿¿¿:
4 5
5 3
¿¿:(1)¿¿¿¿;(2)¿¿¿¿¿¿¿;(3)¿C¿¿¿¿¿¿
 
¿36¿-40¿¿¿¿¿¿¿¿¿CSDN¿¿¿¿¿¿¿¿¿¿
36.¿¿¿¿¿¿longzuo¿¿¿¿
¿¿¿¿¿
n¿¿¿¿¿¿¿¿¿¿¿0¿1¿2¿¿¿¿n-1¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿w[n][n]¿¿w[i][j] ¿¿¿¿¿¿¿i¿j¿¿¿¿¿¿¿¿¿¿
¿¿w[i][j]=i ¿¿j¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿order[n]¿¿
¿¿order[n] = {4,3,5,8,1......}¿¿¿¿¿¿¿¿¿¿ 4¿3¿ 5¿8¿.......
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿4¿5,¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿w¿¿¿¿¿order ¿ ¿¿¿¿¿¿¿¿¿¿¿result[n]¿
¿¿result¿
 
37.¿¿¿¿¿
¿n¿¿¿m+1¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿m¿¿¿¿¿¿¿¿¿¿¿m¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿n¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
38.¿¿¿¿
¿¿¿¿¿
1.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿x¿¿¿¿
¿¿¿¿¿y¿¿¿¿¿¿¿¿¿¿¿¿¿y¿x¿¿¿¿¿
2.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿m¿¿¿¿
3.¿¿¿URL¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
39.¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿
(1).
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿ ¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿1¿¿¿¿¿¿¿¿¿¿¿¿¿2¿¿¿¿¿¿¿¿¿¿¿
(2).
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿
 
40.¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿zp155334877
1)¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿min¿push¿pop¿¿¿¿¿¿¿¿¿O(1)¿
2)¿¿¿¿¿¿¿¿¿(m¿)¿¿N¿¿¿(N<=10)¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿N¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
3)¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿ ¿¿ ¿¿¿¿¿¿¿¿
¿¿¿¿¿ ¿¿¿¿¿¿¿¿¿¿¿
  *¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
  *¿¿¿¿¿¿¿10W¿
  *¿¿¿¿¿¿¿¿1W¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

41.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿ ¿¿¿¿
 
42.¿¿¿append¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿1->2->3 ¿ 2->3->5 ¿¿ 1->2->3->5
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
43.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
44.¿¿¿¿¿¿¿¿¿¿
1.¿¿¿¿¿¿¿¿¿¿¿¿¿¿
2.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿5¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿10¿¿
3.¿¿¿1¿¿url¿¿¿¿¿¿¿url¿¿¿¿¿¿¿¿url¿¿¿¿¿¿¿¿¿¿¿¿¿
 
45.¿¿¿¿¿¿¿¿¿¿
1.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
2.¿¿¿¿¿¿¿¿¿¿n¿¿¿¿¿m¿¿¿¿¿¿¿¿¿¿¿m¿¿¿¿
  ¿¿{3¿2¿4¿3¿6} ¿¿¿¿{3¿2¿4¿3¿6} m=1; 
  {3,6}{2,4,3} m=2
  {3,3}{2,4}{6} m=3 ¿¿m¿¿¿¿¿3
 

46.¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

47.¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿ ¿¿{9¿4¿3¿2¿5¿4¿3¿2}¿¿¿¿¿¿¿¿¿{9¿5¿4¿3¿2}
 
48.¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿{4¿3¿2¿1¿6¿5}
¿¿{6¿5¿4¿3¿2¿1}¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
49.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿n¿¿¿¿¿¿¿¿¿¿¿¿¿¿O(n)¿¿¿¿¿¿O(1)
 
50.¿¿¿¿¿¿¿sorry¿¿¿39¿¿¿¿¿
1.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿ ¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿1¿¿¿¿¿¿¿¿¿¿¿¿¿2¿¿¿¿¿¿¿¿¿¿¿
2.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
-------------------------------------------------------------------

51.¿¿n¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿n¿¿¿¿¿¿¿n¿¿¿¿¿¿¿
¿¿¿¿15¿¿¿1+2+3+4+5=4+5+6=7+8=15¿¿¿¿¿3¿¿¿¿¿1-5¿4-6¿7-8¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 

52.¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿
                                            10
                                          /     /
                                        6        14
                                      /         /   /
                                    4         12     16
¿¿¿¿¿¿¿3¿
¿¿¿¿¿¿¿¿¿¿¿
struct SBinaryTreeNode // a node of the binary tree
{
      int               m_nValue; // value of node
      SBinaryTreeNode  *m_pLeft;  // left child of node
      SBinaryTreeNode  *m_pRight; // right child of node
};
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
53.¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿abc¿¿¿¿¿¿¿a¿b¿c¿¿¿¿¿¿¿¿¿¿¿¿
abc¿acb¿bac¿bca¿cab¿cba¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
54.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿O(n)¿
 
55.¿¿¿¿
¿¿¿¿CMyString¿¿¿¿¿¿
class CMyString
{
public:
      CMyString(char* pData = NULL);
      CMyString(const CMyString& str);
      ~CMyString(void);
      CMyString& operator = (const CMyString& str);
private:
      char* m_pData;
};
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
56.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿BDCABA¿ABCBDAB¿¿¿¿BCBA¿BDAB¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿4¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿Longest Common Subsequence, LCS¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿MicroStrategy¿¿¿¿¿¿¿¿¿
 

57.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿
template<typename T> class CQueue
{
public:
      CQueue() {}
      ~CQueue() {}
      void appendTail(const T& node);  // append a element to tail
      void deleteHead();               // remove a element from head
private:
     T> m_stack1;
     T> m_stack2;
};
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 

58.¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
struct ListNode
{
      int       m_nKey;
      ListNode* m_pNext;
};
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 

59.¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿C++¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿Adobe¿¿2007¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿C++¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
 
60.¿O¿1¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿O(1)¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
struct ListNode
{
      int        m_nKey;
      ListNode*  m_pNext;
};
¿¿¿¿¿¿¿¿
void DeleteNode(ListNode* pListHead, ListNode* pToBeDeleted);
¿¿¿¿¿¿¿¿¿¿¿¿Google¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
-------------------------------------------------------------------------
 
61.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿O(n)¿¿¿¿¿¿¿O(1)¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 

62.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿
struct ListNode
{
      int         m_nKey;
      ListNode*   m_pNext;
};
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 

63.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿They are students.¿¿¿aeiou¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿Thy r stdnts.¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 

64. ¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿2¿3¿5¿¿¿¿¿¿¿Ugly Number¿¿¿¿6¿8¿¿¿¿¿
¿14¿¿¿¿¿¿¿¿¿¿7¿¿¿¿¿¿¿1¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿1500¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿google¿¿¿¿¿¿¿¿¿
 

65.¿¿1¿¿¿¿N¿¿¿¿¿¿
¿¿¿¿¿¿¿n¿¿¿¿¿¿¿1¿¿¿n¿10¿¿¿¿¿¿¿¿3¿
¿¿¿1¿2¿3¿¿¿¿¿¿3¿¿¿999¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
66.¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿{1, 2, 3, 4, 5}¿1¿¿¿¿
¿¿¿¿¿¿¿{5, 4, 3, 2, 1}¿5¿¿¿¿¿

 
67.¿¿¿¿¿¿¿¿¿¿¿
1.¿¿¿¿¿¿
¿¿¿¿¿¿¿¿5¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿5¿¿¿¿¿¿¿¿¿
2-10¿¿¿¿¿¿A¿1¿J¿11¿Q¿12¿K¿13¿¿¿¿¿¿¿¿¿¿¿¿¿¿
2.n¿¿¿¿¿¿¿
¿n¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿S¿¿¿n¿
¿¿¿S¿¿¿¿¿¿¿¿¿¿¿¿¿
 

68.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿{32,  321}¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿32132¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿09¿6¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 

69.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿{3, 4, 5, 1, 2}¿{1, 2, 3, 4, 5}¿¿¿¿¿¿¿¿¿¿¿¿¿¿1¿
    ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿O(N)¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 

70.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
ANSWER ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿Knuth¿<TAOCP>¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 

71.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿double Power(double base, int exponent)¿¿base¿exponent¿¿¿
¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿30¿¿¿¿¿¿¿¿¿
double Power(double base, int exponent)
{
      double result = 1.0;
      for(int i = 1; i <= exponent; ++i)
            result *= base;
      return result;
}
 
 
72.¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿Singleton¿¿¿¿¿¿
 
 
73.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿google¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿goog¿¿¿¿¿¿4¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 

74.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿Google¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
 
75.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿
struct TreeNode
{
    int m_nvalue;
    TreeNode* m_pLeft;
    TreeNode* m_pRight;
};
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 

76.¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿m_pNext¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿m_pSibling¿¿¿¿¿¿¿¿¿¿¿¿NULL¿¿¿¿¿C++¿¿¿¿¿
 struct ComplexNode
{
    int m_nValue;
    ComplexNode* m_pNext;
    ComplexNode* m_pSibling;
};
¿¿¿¿¿¿¿5¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿m_pNext¿¿¿¿¿¿¿¿¿m_pSibling¿¿¿¿¿¿¿¿¿
¿¿NULL¿¿¿¿¿¿¿¿
                                  
¿¿¿¿¿ComplexNode* Clone(ComplexNode* pHead)¿¿¿¿¿¿¿¿¿¿¿ 
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
 

77.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
1.¿¿¿¿¿¿¿¿¿¿¿¿¿
 ¿¿¿¿¿¿p1,p2¿¿¿¿¿¿¿¿¿p1¿¿¿¿¿¿¿p2¿¿¿¿¿¿¿¿¿p2¿¿¿¿¿¿¿
¿¿¿¿¿¿¿p1¿p2¿¿¿¿¿¿¿¿¿¿(p1==p2)¿¿¿¿¿¿¿¿¿¿¿¿
 
2.¿¿¿¿¿¿¿(head1, head2)¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
        ¿¿head1==head2¿¿¿¿¿¿¿¿¿¿¿¿head1¿
¿¿¿¿¿¿head1,head2¿¿¿¿¿¿¿¿¿¿¿¿¿len1¿len2¿¿¿len1>=len2¿
¿¿¿¿p1¿head1¿¿¿¿¿¿len1-len2¿¿¿¿p2=head2¿
¿¿p1¿p2¿¿¿¿¿¿¿¿¿¿¿p1p2¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿

3.¿¿¿¿¿(head)¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
        ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
        ¿¿¿¿¿¿¿p1p2¿¿¿p¿¿¿¿¿¿¿p¿¿¿¿¿
¿¿¿¿p1=p, p2=p->next, p->next=NULL¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿head¿¿¿¿¿¿¿p2¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

4.¿¿¿¿¿¿¿¿¿¿¿p(¿¿¿¿¿¿¿¿¿¿p->next!=NULL)¿¿¿¿¿¿¿¿¿
 ¿¿¿¿¿¿¿¿¿¿p¿¿¿,¿¿¿p->next¿¿¿copy¿p¿¿¿¿¿¿¿p->next¿¿¿
5.¿¿¿¿¿¿¿¿¿¿¿p(¿¿¿¿)¿¿p¿¿¿¿¿¿¿¿¿
  ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿q¿¿q¿¿¿p¿¿¿¿¿¿p¿¿¿¿copy¿q¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿p¿¿
 
78.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
79.¿¿¿¿¿¿¿¿
1.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
2.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
3.¿¿¿¿¿¿¿¿strstr()¿¿¿¿¿¿¿¿

 
80.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿:
12¿¿¿¿¿¿¿,¿¿¿¿,¿¿¿¿¿¿¿¿¿¿¿,¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿,¿¿¿¿¿¿¿¿¿?
¿¿¿¿¿,¿YD,¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
¿¿¿¿¿¿¿¿¿¿¿
===================
81.¿1¿¿¿¿¿¿
1.¿¿int¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿a[i]¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
2.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿1K¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿abc¿cba¿
3.STL¿set¿¿¿¿¿¿¿¿¿¿¿¿hash¿
 
82.¿2¿¿¿¿¿¿
1.¿¿¿¿¿¿A¿B¿¿¿¿¿A={name}¿
¿¿B={age¿sex¿scholarship¿address¿...}¿
¿¿¿
¿¿1¿¿¿¿¿A¿¿name¿¿¿¿¿B¿¿¿¿¿¿¿¿¿
¿¿2¿¿¿¿¿B¿¿¿¿¿¿¿¿¿¿¿¿¿age<20¿¿¿¿¿¿¿¿A¿¿¿¿name¿
2.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿{url¿size}¿
¿url¿¿¿¿size¿¿¿¿¿¿¿¿¿¿¿
¿¿¿
¿¿1¿¿¿Linux Shell¿¿¿¿¿¿¿¿¿¿
¿¿¿url¿¿¿¿¿¿¿baidu¿¿¿¿¿¿¿¿size¿¿¿¿
¿¿2¿¿¿¿¿1¿¿¿¿¿¿¿¿¿¿size¿¿¿¿¿¿¿¿
¿¿¿¿url¿¿¿¿¿¿100¿¿¿¿¿
 
83.¿3¿¿¿¿¿¿
1.¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿O(1)¿¿¿¿¿¿¿O¿n¿¿
2.¿¿¿¿¿
¿C¿¿¿¿¿¿void * memmove(void *dest, const void *src, size_t n)¿
memmove¿¿¿¿¿¿¿¿src¿¿¿¿¿¿¿¿n¿¿¿¿dest¿¿¿¿¿¿¿
¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿void¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
84.¿4¿¿¿¿¿¿
2010¿3¿¿¿¿¿¿[¿¿¿¿¿¿¿¿¿¿¿]
1.a~z¿¿¿¿¿¿0~9¿¿¿N¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
2.¿¿¿¿¿¿¿¿¿¿¿0¿¿¿¿p¿¿¿1¿¿¿¿1-p¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿0¿1¿¿¿¿¿1/2¿¿¿¿¿¿¿¿¿¿¿¿¿¿1¿2¿3¿¿¿¿¿1/3¿...¿
¿¿¿¿¿¿¿¿¿¿¿¿¿1¿2¿3¿...n¿¿¿¿¿1/n¿¿¿¿¿¿¿¿¿
3.¿10¿¿¿¿¿¿¿¿1G¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿query¿¿¿¿¿¿query¿¿¿¿¿¿
¿¿¿¿query¿¿¿¿¿.
 
85.¿¿¿¿¿¿¿¿
1.¿¿¿¿¿¿¿¿¿¿¿¿¿¿A¿B¿
¿¿¿A¿¿¿¿¿¿¿¿¿¿B¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
2.¿¿¿¿¿¿¿¿¿¿asderwsde,¿¿¿¿¿¿¿¿¿¿¿¿¿sde¿¿¿¿
¿¿¿¿¿¿0¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
86.
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿:¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
87.
1.¿¿¿¿¿¿¿¿¿¿¿¿¿2002¿¿¿¿¿¿¿¿¿¿¿¿¿¿
2.¿¿¿¿¿¿¿¿¿¿¿¿¿ads3sl456789DF3456ld345AA¿¿¿¿456789¿¿
3.¿¿strstr¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 

88.2005¿11¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿'*'¿¿¿¿¿¿¿¿
¿¿¿¿'*'¿¿¿¿¿¿¿¿¿¿¿'*'¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿'*'¿¿¿¿
¿¿¿¿¿¿ab**cd**e*12¿
¿¿¿¿*****abcde12¿¿¿¿¿¿¿¿5¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
89.¿¿¿¿¿¿¿¿¿¿¿¿¿
1.2005¿11¿15¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
2.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿atoi¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿ ¿+123¿123, ¿-0123¿-123, ¿123CS45¿123, ¿123.45CS¿123, ¿CS123.45¿0
3.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
4.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿abc123de4fg56¿¿¿¿¿¿¿abcdefg¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿O(N)¿
5.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿"abractyeyt","dgdsaeactyey"¿¿¿¿¿¿"actyet"¿
 

90.
1.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
(¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿)¿
2.¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
3.¿¿¿¿¿¿¿¿¿¿¿¿
 
91.
1.¿¿¿¿¿¿¿¿¿
¿1000¿¿¿¿¿1¿¿¿¿¿¿¿¿¿¿¿¿¿¿1¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿1¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
2.¿¿¿¿¿¿¿
¿¿¿1¿¿¿¿¿1¿¿¿¿¿¿¿¿¿¿¿¿¿1¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿
 
 
92.
1.¿¿¿¿¿¿¿¿,¿¿¿¿¿¿¿¿¿¿¿¿¿¿,¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿,¿¿¿¿¿¿¿¿¿¿(¿¿¿¿¿¿¿¿¿¿¿¿),
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿,¿¿¿,¿¿¿¿¿¿¿¿:
176, 178, 180, 170, 171
¿¿¿¿¿¿¿¿
<176, 170>, <176, 171>, <178, 170>, <178, 171>, <180, 170>, <180, 171>, 
¿¿,¿¿¿¿¿¿¿¿¿¿,¿¿¿¿¿¿¿¿¿¿¿¿¿(¿¿¿¿¿¿¿¿¿¿¿¿¿,¿¿¿¿¿¿)
¿¿¿
¿¿:
¿¿¿¿¿(in)¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿,¿¿¿¿
¿¿¿
¿¿¿¿¿(out)¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿ ¿¿¿¿¿¿¿¿¿¿
¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿100000¿¿¿¿¿¿¿6¿¿¿¿¿¿¿¿¿¿¿¿
 
93.¿¿¿int¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿a¿b¿a[i]¿b[i]¿¿¿¿¿¿¿i¿¿¿¿¿¿¿¿¿i¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿data[i]>=a[i-1]&&data[i]<=b[i]¿data[i]¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
94.¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿=3¿¿¿¿¿¿¿¿9 d- x' W) w9 ?" o3 b0 R
¿¿¿¿¿¿¿¿¿¿: 
¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿
¿¿[1,3,0,5,-1,6]
¿¿[-1,1,3,5]
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
95.¿¿¿¿¿
1 ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿abccba
2.¿¿¿¿¿¿¿¿¿¿¿a[N]¿¿¿¿¿¿¿
 
96.08¿¿¿¿¿¿¿¿¿¿
1¿¿¿strcpy ¿¿
¿¿strcpy ¿¿¿¿¿¿
char *strcpy(char *strDest, const char *strSrc);
¿¿strDest ¿¿¿¿¿¿¿strSrc ¿¿¿¿¿¿¿¿¿C++/C ¿¿¿¿¿¿¿¿¿
¿¿¿¿ strcpy
 

¿¿¿¿¿¿¿¿¿¿¿¿¿100¿¿¿V0.1¿¿
¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
======================
97.¿1¿¿¿¿¿¿¿¿¿¿¿¿
1.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿ 
2.¿¿¿¿¿¿¿¿¿¿¿¿¿
3.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
4.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿ 
5.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿4¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

98.¿2¿¿¿¿¿¿
1.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
2.¿¿¿¿¿malloc()¿¿¿¿¿¿¿¿¿¿¿¿¿¿
3.¿¿¿¿¿¿¿¿¿¿¿¿¿¿A¿B¿¿¿¿A¿¿¿¿¿¿¿¿¿¿B¿¿¿¿¿¿¿¿¿ 
4.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿ 
5.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿ 
6.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

99.¿3¿¿¿¿¿¿
1.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿1¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
2.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿5¿-1¿¿¿ 
3.¿¿¿¿¿¿¿¿¿¿¿¿3¿¿¿¿¿¿¿¿5¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿4¿¿¿¿¿¿40¿-3¿¿¿ 
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿20¿-2¿¿¿

100.¿4¿¿¿¿¿¿¿¿¿¿¿¿¿
1.12¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
13¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿5¿¿-1¿¿¿ 
2.¿9¿¿¿¿10¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿3¿¿-20¿¿¿ 
3.¿¿¿¿24¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿5¿¿-15¿¿¿
 
¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿
==========
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿..¿
1.¿¿¿ . ¿¿¿¿¿¿¿100¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿ 
¿¿¿¿¿¿¿¿¿¿1¿2¿3¿4¿5¿ 
                          
¿¿¿¿1¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿ 
¿¿1¿¿¿¿¿¿2¿¿¿¿¿¿¿¿¿¿¿¿¿4¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿ 
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
 
2.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿ 
¿¿¿¿¿¿¿¿¿¿¿  
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿  
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿ 
¿¿¿
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿




